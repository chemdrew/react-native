var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var React=_interopRequireWildcard(require("react"));var _reactTestRenderer=_interopRequireDefault(require("react-test-renderer"));var _jsxRuntime=require("react/jsx-runtime");var _this=this,_jsxFileName="/Users/apratt/dev/tmp/react-native/Libraries/Animated/__tests__/AnimatedNative-test.js";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}jest.clearAllMocks().mock('../../BatchedBridge/NativeModules',function(){return{NativeAnimatedModule:{},PlatformConstants:{getConstants:function getConstants(){return{};}}};}).mock('../NativeAnimatedModule').mock('../../EventEmitter/NativeEventEmitter').setMock('../../ReactNative/RendererProxy',{findNodeHandle:function findNodeHandle(){return 1;}});var Animated=require('../Animated').default;var NativeAnimatedHelper=require('../NativeAnimatedHelper').default;describe('Native Animated',function(){var NativeAnimatedModule=require('../NativeAnimatedModule').default;beforeEach(function(){Object.assign(NativeAnimatedModule,{getValue:jest.fn(),addAnimatedEventToView:jest.fn(),connectAnimatedNodes:jest.fn(),connectAnimatedNodeToView:jest.fn(),createAnimatedNode:jest.fn(),disconnectAnimatedNodeFromView:jest.fn(),disconnectAnimatedNodes:jest.fn(),dropAnimatedNode:jest.fn(),extractAnimatedNodeOffset:jest.fn(),flattenAnimatedNodeOffset:jest.fn(),removeAnimatedEventFromView:jest.fn(),restoreDefaultValues:jest.fn(),setAnimatedNodeOffset:jest.fn(),setAnimatedNodeValue:jest.fn(),startAnimatingNode:jest.fn(),startListeningToAnimatedNodeValue:jest.fn(),stopAnimation:jest.fn(),stopListeningToAnimatedNodeValue:jest.fn()});});describe('Animated Value',function(){it('proxies `setValue` correctly',function(){var opacity=new Animated.Value(0);var ref=React.createRef(null);Animated.timing(opacity,{toValue:10,duration:1000,useNativeDriver:true}).start();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{ref:ref,style:{opacity:opacity}}));expect(ref.current).not.toBeNull();jest.spyOn(ref.current,'setNativeProps');opacity.setValue(0.5);expect(NativeAnimatedModule.setAnimatedNodeValue).toBeCalledWith(expect.any(Number),0.5);expect(ref.current.setNativeProps).not.toHaveBeenCalled();});it('should set offset',function(){var opacity=new Animated.Value(0);opacity.setOffset(10);opacity.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'value',value:0,offset:10});opacity.setOffset(20);expect(NativeAnimatedModule.setAnimatedNodeOffset).toBeCalledWith(expect.any(Number),20);});it('should flatten offset',function(){var opacity=new Animated.Value(0);opacity.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'value',value:0,offset:0});opacity.flattenOffset();expect(NativeAnimatedModule.flattenAnimatedNodeOffset).toBeCalledWith(expect.any(Number));});it('should save value on unmount',function(){NativeAnimatedModule.getValue=jest.fn(function(tag,saveCallback){saveCallback(1);});var opacity=new Animated.Value(0);opacity.__makeNative();var root=_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));var tag=opacity.__getNativeTag();root.unmount();expect(NativeAnimatedModule.getValue).toBeCalledWith(tag,expect.any(Function));expect(opacity.__getValue()).toBe(1);});it('should deduct offset when saving value on unmount',function(){NativeAnimatedModule.getValue=jest.fn(function(tag,saveCallback){saveCallback(1);});var opacity=new Animated.Value(0);opacity.setOffset(0.5);opacity.__makeNative();var root=_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));var tag=opacity.__getNativeTag();root.unmount();expect(NativeAnimatedModule.getValue).toBeCalledWith(tag,expect.any(Function));expect(opacity.__getValue()).toBe(1);});it('should extract offset',function(){var opacity=new Animated.Value(0);opacity.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'value',value:0,offset:0});opacity.extractOffset();expect(NativeAnimatedModule.extractAnimatedNodeOffset).toBeCalledWith(expect.any(Number));});});describe('Animated Listeners',function(){it('should get updates',function(){var value1=new Animated.Value(0);value1.__makeNative();var listener=jest.fn();var id=value1.addListener(listener);expect(NativeAnimatedModule.startListeningToAnimatedNodeValue).toHaveBeenCalledWith(value1.__getNativeTag());NativeAnimatedHelper.nativeEventEmitter.emit('onAnimatedValueUpdate',{value:42,tag:value1.__getNativeTag()});expect(listener).toHaveBeenCalledTimes(1);expect(listener).toBeCalledWith({value:42});expect(value1.__getValue()).toBe(42);NativeAnimatedHelper.nativeEventEmitter.emit('onAnimatedValueUpdate',{value:7,tag:value1.__getNativeTag()});expect(listener).toHaveBeenCalledTimes(2);expect(listener).toBeCalledWith({value:7});expect(value1.__getValue()).toBe(7);value1.removeListener(id);expect(NativeAnimatedModule.stopListeningToAnimatedNodeValue).toHaveBeenCalledWith(value1.__getNativeTag());NativeAnimatedHelper.nativeEventEmitter.emit('onAnimatedValueUpdate',{value:1492,tag:value1.__getNativeTag()});expect(listener).toHaveBeenCalledTimes(2);expect(value1.__getValue()).toBe(7);});it('should removeAll',function(){var value1=new Animated.Value(0);value1.__makeNative();var listener=jest.fn();[1,2,3,4].forEach(function(){return value1.addListener(listener);});expect(NativeAnimatedModule.startListeningToAnimatedNodeValue).toHaveBeenCalledWith(value1.__getNativeTag());NativeAnimatedHelper.nativeEventEmitter.emit('onAnimatedValueUpdate',{value:42,tag:value1.__getNativeTag()});expect(listener).toHaveBeenCalledTimes(4);expect(listener).toBeCalledWith({value:42});value1.removeAllListeners();expect(NativeAnimatedModule.stopListeningToAnimatedNodeValue).toHaveBeenCalledWith(value1.__getNativeTag());NativeAnimatedHelper.nativeEventEmitter.emit('onAnimatedValueUpdate',{value:7,tag:value1.__getNativeTag()});expect(listener).toHaveBeenCalledTimes(4);});});describe('Animated Events',function(){it('should map events',function(){var value=new Animated.Value(0);value.__makeNative();var event=Animated.event([{nativeEvent:{state:{foo:value}}}],{useNativeDriver:true});var root=_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{onTouchMove:event}));expect(NativeAnimatedModule.addAnimatedEventToView).toBeCalledWith(expect.any(Number),'onTouchMove',{nativeEventPath:['state','foo'],animatedValueTag:value.__getNativeTag()});expect(NativeAnimatedModule.removeAnimatedEventFromView).not.toHaveBeenCalled();root.unmount();expect(NativeAnimatedModule.removeAnimatedEventFromView).toBeCalledWith(expect.any(Number),'onTouchMove',value.__getNativeTag());});it('shoud map AnimatedValueXY',function(){var value=new Animated.ValueXY({x:0,y:0});value.__makeNative();var event=Animated.event([{nativeEvent:{state:value}}],{useNativeDriver:true});_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{onTouchMove:event}));['x','y'].forEach(function(key,idx){return expect(NativeAnimatedModule.addAnimatedEventToView).toHaveBeenNthCalledWith(idx+1,expect.any(Number),'onTouchMove',{nativeEventPath:['state',key],animatedValueTag:value[key].__getNativeTag()});});});it('should throw on invalid event path',function(){var value=new Animated.Value(0);value.__makeNative();var event=Animated.event([{notNativeEvent:{foo:value}}],{useNativeDriver:true});jest.spyOn(console,'error').mockImplementationOnce(function(){var _console;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(args[0].startsWith('The above error occurred in the')){return;}(_console=console).errorDebug.apply(_console,args);});expect(function(){_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{onTouchMove:event}));}).toThrowError(/nativeEvent/);expect(NativeAnimatedModule.addAnimatedEventToView).not.toBeCalled();console.error.mockRestore();});it('should call listeners',function(){var value=new Animated.Value(0);value.__makeNative();var listener=jest.fn();var event=Animated.event([{nativeEvent:{foo:value}}],{useNativeDriver:true,listener:listener});var handler=event.__getHandler();handler({nativeEvent:{foo:42}});expect(listener).toHaveBeenCalledTimes(1);expect(listener).toBeCalledWith({nativeEvent:{foo:42}});});});describe('Animated Graph',function(){it('creates and detaches nodes',function(){var opacity=new Animated.Value(0);var root=_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));Animated.timing(opacity,{toValue:10,duration:1000,useNativeDriver:true}).start();expect(NativeAnimatedModule.createAnimatedNode).toHaveBeenCalledTimes(3);expect(NativeAnimatedModule.connectAnimatedNodes).toHaveBeenCalledTimes(2);expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'frames',frames:expect.any(Array),toValue:expect.any(Number),iterations:1},expect.any(Function));expect(NativeAnimatedModule.disconnectAnimatedNodes).not.toHaveBeenCalled();expect(NativeAnimatedModule.dropAnimatedNode).not.toHaveBeenCalled();root.unmount();expect(NativeAnimatedModule.disconnectAnimatedNodes).toHaveBeenCalledTimes(2);expect(NativeAnimatedModule.dropAnimatedNode).toHaveBeenCalledTimes(3);});it('sends a valid description for value, style and props nodes',function(){var opacity=new Animated.Value(0);_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));Animated.timing(opacity,{toValue:10,duration:1000,useNativeDriver:true}).start();expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'value',value:0,offset:0});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'style',style:{opacity:expect.any(Number)}});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'props',props:{style:expect.any(Number)}});});it('sends a valid graph description for Animated.add nodes',function(){var first=new Animated.Value(1);var second=new Animated.Value(2);first.__makeNative();second.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:Animated.add(first,second)}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'addition',input:expect.any(Array)});var additionCalls=NativeAnimatedModule.createAnimatedNode.mock.calls.filter(function(call){return call[1].type==='addition';});expect(additionCalls.length).toBe(1);var additionCall=additionCalls[0];var additionNodeTag=additionCall[0];var additionConnectionCalls=NativeAnimatedModule.connectAnimatedNodes.mock.calls.filter(function(call){return call[1]===additionNodeTag;});expect(additionConnectionCalls.length).toBe(2);expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(additionCall[1].input[0],{type:'value',value:1,offset:0});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(additionCall[1].input[1],{type:'value',value:2,offset:0});});it('sends a valid graph description for Animated.subtract nodes',function(){var first=new Animated.Value(2);var second=new Animated.Value(1);first.__makeNative();second.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:Animated.subtract(first,second)}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'subtraction',input:expect.any(Array)});var subtractionCalls=NativeAnimatedModule.createAnimatedNode.mock.calls.filter(function(call){return call[1].type==='subtraction';});expect(subtractionCalls.length).toBe(1);var subtractionCall=subtractionCalls[0];var subtractionNodeTag=subtractionCall[0];var subtractionConnectionCalls=NativeAnimatedModule.connectAnimatedNodes.mock.calls.filter(function(call){return call[1]===subtractionNodeTag;});expect(subtractionConnectionCalls.length).toBe(2);expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(subtractionCall[1].input[0],{type:'value',value:2,offset:0});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(subtractionCall[1].input[1],{type:'value',value:1,offset:0});});it('sends a valid graph description for Animated.multiply nodes',function(){var first=new Animated.Value(2);var second=new Animated.Value(1);first.__makeNative();second.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:Animated.multiply(first,second)}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'multiplication',input:expect.any(Array)});var multiplicationCalls=NativeAnimatedModule.createAnimatedNode.mock.calls.filter(function(call){return call[1].type==='multiplication';});expect(multiplicationCalls.length).toBe(1);var multiplicationCall=multiplicationCalls[0];var multiplicationNodeTag=multiplicationCall[0];var multiplicationConnectionCalls=NativeAnimatedModule.connectAnimatedNodes.mock.calls.filter(function(call){return call[1]===multiplicationNodeTag;});expect(multiplicationConnectionCalls.length).toBe(2);expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(multiplicationCall[1].input[0],{type:'value',value:2,offset:0});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(multiplicationCall[1].input[1],{type:'value',value:1,offset:0});});it('sends a valid graph description for Animated.divide nodes',function(){var first=new Animated.Value(4);var second=new Animated.Value(2);first.__makeNative();second.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:Animated.divide(first,second)}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'division',input:expect.any(Array)});var divisionCalls=NativeAnimatedModule.createAnimatedNode.mock.calls.filter(function(call){return call[1].type==='division';});expect(divisionCalls.length).toBe(1);var divisionCall=divisionCalls[0];var divisionNodeTag=divisionCall[0];var divisionConnectionCalls=NativeAnimatedModule.connectAnimatedNodes.mock.calls.filter(function(call){return call[1]===divisionNodeTag;});expect(divisionConnectionCalls.length).toBe(2);expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(divisionCall[1].input[0],{type:'value',value:4,offset:0});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(divisionCall[1].input[1],{type:'value',value:2,offset:0});});it('sends a valid graph description for Animated.modulo nodes',function(){var value=new Animated.Value(4);value.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:Animated.modulo(value,4)}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'modulus',modulus:4,input:expect.any(Number)});var moduloCalls=NativeAnimatedModule.createAnimatedNode.mock.calls.filter(function(call){return call[1].type==='modulus';});expect(moduloCalls.length).toBe(1);var moduloCall=moduloCalls[0];var moduloNodeTag=moduloCall[0];var moduloConnectionCalls=NativeAnimatedModule.connectAnimatedNodes.mock.calls.filter(function(call){return call[1]===moduloNodeTag;});expect(moduloConnectionCalls.length).toBe(1);expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(moduloCall[1].input,{type:'value',value:4,offset:0});});it('sends a valid graph description for interpolate() nodes',function(){var value=new Animated.Value(10);value.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:value.interpolate({inputRange:[10,20],outputRange:[0,1]})}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'value',value:10,offset:0});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'interpolation',inputRange:[10,20],outputRange:[0,1],outputType:null,extrapolateLeft:'extend',extrapolateRight:'extend'});var interpolationNodeTag=NativeAnimatedModule.createAnimatedNode.mock.calls.find(function(call){return call[1].type==='interpolation';})[0];var valueNodeTag=NativeAnimatedModule.createAnimatedNode.mock.calls.find(function(call){return call[1].type==='value';})[0];expect(NativeAnimatedModule.connectAnimatedNodes).toBeCalledWith(valueNodeTag,interpolationNodeTag);});it('sends a valid graph description for transform nodes',function(){var translateX=new Animated.Value(0);translateX.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{transform:[{translateX:translateX},{scale:2}]}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'transform',transforms:[{nodeTag:expect.any(Number),property:'translateX',type:'animated'},{value:2,property:'scale',type:'static'}]});});it('sends a valid graph description for Animated.diffClamp nodes',function(){var value=new Animated.Value(2);value.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:Animated.diffClamp(value,0,20)}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'diffclamp',input:expect.any(Number),max:20,min:0});var diffClampCalls=NativeAnimatedModule.createAnimatedNode.mock.calls.filter(function(call){return call[1].type==='diffclamp';});expect(diffClampCalls.length).toBe(1);var diffClampCall=diffClampCalls[0];var diffClampNodeTag=diffClampCall[0];var diffClampConnectionCalls=NativeAnimatedModule.connectAnimatedNodes.mock.calls.filter(function(call){return call[1]===diffClampNodeTag;});expect(diffClampConnectionCalls.length).toBe(1);expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(diffClampCall[1].input,{type:'value',value:2,offset:0});});it("doesn't call into native API if useNativeDriver is set to false",function(){var opacity=new Animated.Value(0);var root=_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));Animated.timing(opacity,{toValue:10,duration:1000,useNativeDriver:false}).start();root.unmount();expect(NativeAnimatedModule.createAnimatedNode).not.toBeCalled();});it('fails when trying to run non-native animation on native node',function(){var opacity=new Animated.Value(0);var ref=React.createRef(null);_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{ref:ref,style:{opacity:opacity}}));expect(ref.current).not.toBeNull();ref.current.setNativeProps=jest.fn();Animated.timing(opacity,{toValue:10,duration:50,useNativeDriver:true}).start();jest.runAllTimers();Animated.timing(opacity,{toValue:4,duration:500,useNativeDriver:false}).start();try{process.env.NODE_ENV='development';expect(jest.runAllTimers).toThrow('Attempting to run JS driven animation on animated node that has '+'been moved to "native" earlier by starting an animation with '+'`useNativeDriver: true`');}finally{process.env.NODE_ENV='test';}});it('fails for unsupported styles',function(){var left=new Animated.Value(0);_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{left:left}}));var animation=Animated.timing(left,{toValue:10,duration:50,useNativeDriver:true});expect(animation.start).toThrowError(/left/);});it('works for any `static` props and styles',function(){var opacity=new Animated.Value(0);opacity.__makeNative();_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{removeClippedSubviews:true,style:{left:10,opacity:opacity,top:20}}));expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'style',style:{opacity:expect.any(Number)}});expect(NativeAnimatedModule.createAnimatedNode).toBeCalledWith(expect.any(Number),{type:'props',props:{style:expect.any(Number)}});});});describe('Animations',function(){it('sends a valid timing animation description',function(){var anim=new Animated.Value(0);Animated.timing(anim,{toValue:10,duration:1000,useNativeDriver:true}).start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'frames',frames:expect.any(Array),toValue:expect.any(Number),iterations:1},expect.any(Function));});it('sends a valid spring animation description',function(){var anim=new Animated.Value(0);Animated.spring(anim,{toValue:10,friction:5,tension:164,useNativeDriver:true}).start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'spring',stiffness:679.08,damping:16,mass:1,initialVelocity:0,overshootClamping:false,restDisplacementThreshold:0.001,restSpeedThreshold:0.001,toValue:10,iterations:1},expect.any(Function));Animated.spring(anim,{toValue:10,stiffness:1000,damping:500,mass:3,useNativeDriver:true}).start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'spring',stiffness:1000,damping:500,mass:3,initialVelocity:0,overshootClamping:false,restDisplacementThreshold:0.001,restSpeedThreshold:0.001,toValue:10,iterations:1},expect.any(Function));Animated.spring(anim,{toValue:10,bounciness:8,speed:10,useNativeDriver:true}).start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'spring',damping:23.05223140901191,initialVelocity:0,overshootClamping:false,restDisplacementThreshold:0.001,restSpeedThreshold:0.001,stiffness:299.61882352941177,mass:1,toValue:10,iterations:1},expect.any(Function));});it('sends a valid decay animation description',function(){var anim=new Animated.Value(0);Animated.decay(anim,{velocity:10,deceleration:0.1,useNativeDriver:true}).start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'decay',deceleration:0.1,velocity:10,iterations:1},expect.any(Function));});it('works with Animated.loop',function(){var anim=new Animated.Value(0);Animated.loop(Animated.decay(anim,{velocity:10,deceleration:0.1,useNativeDriver:true}),{iterations:10}).start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'decay',deceleration:0.1,velocity:10,iterations:10},expect.any(Function));});it('sends stopAnimation command to native',function(){var value=new Animated.Value(0);var animation=Animated.timing(value,{toValue:10,duration:50,useNativeDriver:true});animation.start();expect(NativeAnimatedModule.startAnimatingNode).toBeCalledWith(expect.any(Number),expect.any(Number),{type:'frames',frames:expect.any(Array),toValue:expect.any(Number),iterations:1},expect.any(Function));var animationId=NativeAnimatedModule.startAnimatingNode.mock.calls[0][0];animation.stop();expect(NativeAnimatedModule.stopAnimation).toBeCalledWith(animationId);});it('calls stopAnimation callback with native value',function(){NativeAnimatedModule.getValue=jest.fn(function(tag,saveCallback){saveCallback(1);});var anim=new Animated.Value(0);Animated.timing(anim,{duration:1000,useNativeDriver:true}).start();var tag=anim.__getNativeTag();var currentValue=0;anim.stopAnimation(function(value){return currentValue=value;});expect(NativeAnimatedModule.getValue).toBeCalledWith(tag,expect.any(Function));expect(currentValue).toEqual(1);});});describe('Animated Components',function(){it('Should restore default values on prop updates only',function(){var opacity=new Animated.Value(0);opacity.__makeNative();var root=_reactTestRenderer.default.create((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));expect(NativeAnimatedModule.restoreDefaultValues).not.toHaveBeenCalled();root.update((0,_jsxRuntime.jsx)(Animated.View,{style:{opacity:opacity}}));expect(NativeAnimatedModule.restoreDefaultValues).toHaveBeenCalledWith(expect.any(Number));root.unmount();expect(NativeAnimatedModule.restoreDefaultValues).toHaveBeenCalledTimes(1);});});});