'use strict';var _jsxRuntime=require("react/jsx-runtime");var _this=this,_jsxFileName="/Users/apratt/dev/tmp/react-native/Libraries/Components/TextInput/__tests__/InputAccessoryView-test.js";var render=require('../../../../jest/renderer');var View=require('../../View/View');var InputAccessoryView=require('../InputAccessoryView');var React=require('react');describe('<InputAccessoryView />',function(){it('should render as <RCTInputAccessoryView> when mocked',function(){var instance=render.create((0,_jsxRuntime.jsx)(InputAccessoryView,{nativeID:"1",children:(0,_jsxRuntime.jsx)(View,{})}));expect(instance).toMatchSnapshot();});it('should shallow render as <InputAccessoryView> when mocked',function(){var output=render.shallow((0,_jsxRuntime.jsx)(InputAccessoryView,{nativeID:"1",children:(0,_jsxRuntime.jsx)(View,{})}));expect(output).toMatchSnapshot();});it('should shallow render as <InputAccessoryView> when not mocked',function(){jest.dontMock('../InputAccessoryView');var output=render.shallow((0,_jsxRuntime.jsx)(InputAccessoryView,{nativeID:"1",children:(0,_jsxRuntime.jsx)(View,{})}));expect(output).toMatchSnapshot();});it('should render as <RCTInputAccessoryView> when not mocked',function(){jest.dontMock('../InputAccessoryView');var instance=render.create((0,_jsxRuntime.jsx)(InputAccessoryView,{nativeID:"1",children:(0,_jsxRuntime.jsx)(View,{})}));expect(instance).toMatchSnapshot();});});