var LayoutAnimation=require('../../../LayoutAnimation/LayoutAnimation');var dismissKeyboard=require('../../../Utilities/dismissKeyboard');var Keyboard=require('../Keyboard');jest.mock('../../../LayoutAnimation/LayoutAnimation');jest.mock('../../../Utilities/dismissKeyboard');describe('Keyboard',function(){beforeEach(function(){jest.resetAllMocks();});it('uses dismissKeyboard utility',function(){Keyboard.dismiss();expect(dismissKeyboard).toHaveBeenCalled();});describe('scheduling layout animation',function(){var scheduleLayoutAnimation=function scheduleLayoutAnimation(duration,easing){return Keyboard.scheduleLayoutAnimation({duration:duration,easing:easing});};it('triggers layout animation',function(){scheduleLayoutAnimation(12,'spring');expect(LayoutAnimation.configureNext).toHaveBeenCalledWith({duration:12,update:{duration:12,type:'spring'}});});it('does not trigger animation when duration is null',function(){scheduleLayoutAnimation(null,'spring');expect(LayoutAnimation.configureNext).not.toHaveBeenCalled();});it('does not trigger animation when duration is 0',function(){scheduleLayoutAnimation(0,'spring');expect(LayoutAnimation.configureNext).not.toHaveBeenCalled();});describe('animation update type',function(){var assertAnimationUpdateType=function assertAnimationUpdateType(type){return expect(LayoutAnimation.configureNext).toHaveBeenCalledWith(expect.objectContaining({duration:expect.anything(),update:{duration:expect.anything(),type:type}}));};it('retrieves type from LayoutAnimation',function(){scheduleLayoutAnimation(12,'linear');assertAnimationUpdateType('linear');});it("defaults to 'keyboard' when key in LayoutAnimation is not found",function(){scheduleLayoutAnimation(12,'some-unknown-animation-type');assertAnimationUpdateType('keyboard');});it("defaults to 'keyboard' when easing is null",function(){scheduleLayoutAnimation(12,null);assertAnimationUpdateType('keyboard');});});});});