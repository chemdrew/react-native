var StyleSheet=require('../../StyleSheet/StyleSheet');var Animated=require('../Animated').default;var AnimatedProps=require('../nodes/AnimatedProps').default;jest.mock('../../Utilities/Platform',function(){return{OS:'web'};});describe('Animated tests',function(){beforeEach(function(){jest.resetModules();});describe('Animated',function(){it('works end to end',function(){var anim=new Animated.Value(0);var translateAnim=anim.interpolate({inputRange:[0,1],outputRange:[100,200]});var callback=jest.fn();var node=new AnimatedProps({style:{backgroundColor:'red',opacity:anim,transform:[{translate:[translateAnim,translateAnim]},{translateX:translateAnim},{scale:anim}],shadowOffset:{width:anim,height:anim}}},callback);expect(node.__getValue()).toEqual({style:[{backgroundColor:'red',opacity:anim,shadowOffset:{width:anim,height:anim},transform:[{translate:[translateAnim,translateAnim]},{translateX:translateAnim},{scale:anim}]},{opacity:0,transform:[{translate:[100,100]},{translateX:100},{scale:0}],shadowOffset:{width:0,height:0}}]});expect(anim.__getChildren().length).toBe(0);node.__attach();expect(anim.__getChildren().length).toBe(3);anim.setValue(0.5);expect(callback).toBeCalled();expect(node.__getValue()).toEqual({style:[{backgroundColor:'red',opacity:anim,shadowOffset:{width:anim,height:anim},transform:[{translate:[translateAnim,translateAnim]},{translateX:translateAnim},{scale:anim}]},{opacity:0.5,transform:[{translate:[150,150]},{translateX:150},{scale:0.5}],shadowOffset:{width:0.5,height:0.5}}]});node.__detach();expect(anim.__getChildren().length).toBe(0);anim.setValue(1);expect(callback.mock.calls.length).toBe(1);});it('does not discard initial style',function(){var value1=new Animated.Value(1);var scale=value1.interpolate({inputRange:[0,1],outputRange:[1,2]});var callback=jest.fn();var node=new AnimatedProps({style:[styles.red,{transform:[{scale:scale}]}]},callback);expect(node.__getValue()).toEqual({style:[[styles.red,{transform:[{scale:scale}]}],{transform:[{scale:2}]}]});node.__attach();expect(callback.mock.calls.length).toBe(0);value1.setValue(0.5);expect(callback.mock.calls.length).toBe(1);expect(node.__getValue()).toEqual({style:[[styles.red,{transform:[{scale:scale}]}],{transform:[{scale:1.5}]}]});node.__detach();});});});var styles=StyleSheet.create({red:{backgroundColor:'red'}});