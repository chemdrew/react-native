'use strict';var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _LogBox=_interopRequireDefault(require("../../LogBox/LogBox"));var ExceptionsManager=require('../ExceptionsManager');var NativeExceptionsManager=require('../NativeExceptionsManager').default;var ReactFiberErrorDialog=require('../ReactFiberErrorDialog').default;var fs=require('fs');var path=require('path');var capturedErrorDefaults={componentName:'A',componentStack:'\n  in A\n  in B\n  in C',errorBoundary:null,errorBoundaryFound:false,errorBoundaryName:null,willRetry:false};describe('checkVersion',function(){describe('in development',function(){setDevelopmentModeForTests(true);runExceptionsManagerTests();});describe('in production',function(){setDevelopmentModeForTests(false);runExceptionsManagerTests();});});function setDevelopmentModeForTests(dev){var originalDev;beforeAll(function(){originalDev=global.__DEV__;global.__DEV__=dev;});afterAll(function(){global.__DEV__=originalDev;});}function runExceptionsManagerTests(){describe('ExceptionsManager',function(){var nativeReportException;var logBoxAddException;beforeEach(function(){logBoxAddException=jest.fn();jest.resetModules();jest.mock('../../LogBox/LogBox',function(){return{default:{addException:logBoxAddException}};});jest.mock('../NativeExceptionsManager',function(){return{default:{reportException:jest.fn(),updateExceptionMessage:function updateExceptionMessage(){}}};});jest.mock('../Devtools/symbolicateStackTrace',function(){return function(){var _symbolicateStackTrace=(0,_asyncToGenerator2.default)(function*(stack){return{stack:stack};});function symbolicateStackTrace(_x){return _symbolicateStackTrace.apply(this,arguments);}return symbolicateStackTrace;}();});jest.spyOn(console,'error').mockReturnValue(undefined);nativeReportException=NativeExceptionsManager.reportException;});afterEach(function(){jest.restoreAllMocks();});describe('ReactFiberErrorDialog.showErrorDialog',function(){test('forwards error instance to reportException',function(){var error=new ReferenceError('Some error happened');var message=error.message,name=error.name;var logToConsoleInReact=ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:error}));if(__DEV__){expect(nativeReportException.mock.calls.length).toBe(0);expect(logBoxAddException.mock.calls.length).toBe(1);return;}expect(nativeReportException.mock.calls.length).toBe(1);var exceptionData=nativeReportException.mock.calls[0][0];var formattedMessage='ReferenceError: '+message+'\n\n'+'This error is located at:'+capturedErrorDefaults.componentStack;expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe(message);expect(exceptionData.name).toBe(name);expect(exceptionData.componentStack).toBe(capturedErrorDefaults.componentStack);expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new ReferenceError('Some error happened');");expect(exceptionData.isFatal).toBe(false);expect(logToConsoleInReact).toBe(false);expect(console.error).toBeCalledWith(formattedMessage);});test('does not pop frames off the stack with framesToPop',function(){function createError(){var error=new Error('Some error happened');error.framesToPop=1;return error;}var error=createError();ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:error}));var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new Error('Some error happened');");});test('adds the JS engine to the message',function(){var error=new Error('Some error happened');error.jsEngine='hermes';var message=error.message,jsEngine=error.jsEngine;ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:error}));var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(exceptionData.message).toBe('Error: '+message+'\n\n'+'This error is located at:'+capturedErrorDefaults.componentStack+', js engine: '+jsEngine);expect(console.error).toBeCalledWith('Error: '+message+'\n\n'+'This error is located at:'+capturedErrorDefaults.componentStack+', js engine: '+jsEngine);});test('wraps string in an Error and sends to handleException',function(){var message='Some error happened';var logToConsoleInReact=ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:message}));var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}var formattedMessage=message+'\n\n'+'This error is located at:'+capturedErrorDefaults.componentStack;expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe(message);expect(exceptionData.componentStack).toBe(capturedErrorDefaults.componentStack);expect(exceptionData.stack[0].file).toMatch(/ReactFiberErrorDialog\.js$/);expect(exceptionData.isFatal).toBe(false);expect(logToConsoleInReact).toBe(false);expect(console.error).toBeCalledWith(formattedMessage);});test('reports "Unspecified error" if error is null',function(){var logToConsoleInReact=ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:null}));var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}var formattedMessage='Unspecified error'+'\n\n'+'This error is located at:'+capturedErrorDefaults.componentStack;expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe('Unspecified error');expect(exceptionData.name).toBe(null);expect(exceptionData.componentStack).toBe(capturedErrorDefaults.componentStack);expect(exceptionData.stack[0].file).toMatch(/ReactFiberErrorDialog\.js$/);expect(exceptionData.isFatal).toBe(false);expect(logToConsoleInReact).toBe(false);expect(console.error).toBeCalledWith(formattedMessage);});test('works with a frozen error object',function(){var error=Object.freeze(new Error('Some error happened'));ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:error}));var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = Object.freeze(new Error('Some error happened'));");});test('does not mutate the message',function(){var error=new ReferenceError('Some error happened');var message=error.message;ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{error:error}));if(__DEV__){expect(logBoxAddException).toHaveBeenCalled();}else{expect(nativeReportException).toHaveBeenCalled();expect(error.message).toBe(message);}});test('can safely process the same error multiple times',function(){var error=new ReferenceError('Some error happened');var message=error.message;var componentStacks=['\n  in A\n  in B\n  in C','\n  in X\n  in Y\n  in Z'];for(var componentStack of componentStacks){nativeReportException.mockClear();logBoxAddException.mockClear();var formattedMessage='ReferenceError: '+message+'\n\n'+'This error is located at:'+componentStack;var logToConsoleInReact=ReactFiberErrorDialog.showErrorDialog(Object.assign({},capturedErrorDefaults,{componentStack:componentStack,error:error}));var exceptionData=void 0;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe(message);expect(exceptionData.componentStack).toBe(componentStack);expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new ReferenceError('Some error happened');");expect(exceptionData.isFatal).toBe(false);expect(logToConsoleInReact).toBe(false);expect(console.error).toBeCalledWith(formattedMessage);}});});describe('console.error handler',function(){var mockError;beforeEach(function(){mockError=console.error;ExceptionsManager.installConsoleErrorReporter();});afterEach(function(){console.error=console._errorOriginal;delete console._errorOriginal;delete console.reportErrorsAsExceptions;});test('logging an Error',function(){var error=new Error('Some error happened');var message=error.message,name=error.name;console.error(error);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}var formattedMessage='Error: '+message;expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe(message);expect(exceptionData.name).toBe(name);expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new Error('Some error happened');");expect(exceptionData.isFatal).toBe(false);expect(mockError.mock.calls[0]).toHaveLength(1);expect(mockError.mock.calls[0][0]).toBeInstanceOf(Error);expect(mockError.mock.calls[0][0].toString()).toBe(formattedMessage);});test('logging a string',function(){var message='Some error happened';console.error(message);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(exceptionData.message).toBe('console.error: Some error happened');expect(exceptionData.originalMessage).toBe('Some error happened');expect(exceptionData.name).toBe('console.error');expect(getLineFromFrame(getFirstFrameInThisFile(exceptionData.stack))).toBe('console.error(message);');expect(exceptionData.isFatal).toBe(false);expect(mockError.mock.calls[0]).toEqual([message]);});test('logging arbitrary arguments',function(){var _console;var args=[42,true,Symbol(),{x:undefined,y:null}];(_console=console).error.apply(_console,args);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(exceptionData.message).toBe('console.error: 42 true ["symbol" failed to stringify] {"y":null}');expect(exceptionData.originalMessage).toBe('42 true ["symbol" failed to stringify] {"y":null}');expect(exceptionData.name).toBe('console.error');expect(getLineFromFrame(getFirstFrameInThisFile(exceptionData.stack))).toBe('console.error(...args);');expect(exceptionData.isFatal).toBe(false);expect(mockError).toHaveBeenCalledTimes(1);expect(mockError.mock.calls[0]).toHaveLength(args.length);for(var i=0;i<args.length;++i){expect(mockError.mock.calls[0][i]).toBe(args[i]);}});test('logging a warning',function(){var message='Warning: Some mild issue happened';console.error(message);expect(nativeReportException).not.toHaveBeenCalled();expect(mockError.mock.calls[0]).toEqual([message]);});test('logging a warning with more arguments',function(){var _console2;var args=['Warning: Some mild issue happened',42];(_console2=console).error.apply(_console2,args);expect(nativeReportException).not.toHaveBeenCalled();expect(mockError.mock.calls[0]).toEqual(args);});test('logging a warning-looking object',function(){var _console3;var object={toString:function toString(){return'Warning: Some error may have happened';}};object.cycle=object;var args=[object];(_console3=console).error.apply(_console3,args);if(__DEV__){expect(logBoxAddException).toHaveBeenCalled();}else{expect(nativeReportException).toHaveBeenCalled();}});test('does not log "warn"-type errors',function(){var error=new Error('This is a warning.');error.type='warn';console.error(error);expect(nativeReportException).not.toHaveBeenCalled();});test('reportErrorsAsExceptions = false',function(){console.reportErrorsAsExceptions=false;var message='Some error happened';console.error(message);expect(nativeReportException).not.toHaveBeenCalled();expect(mockError.mock.calls[0]).toEqual([message]);});test('does not pop frames off the stack with framesToPop',function(){function createError(){var error=new Error('Some error happened');error.framesToPop=1;return error;}var error=createError();console.error(error);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new Error('Some error happened');");});});describe('handleException',function(){test('handling a fatal Error',function(){var error=new Error('Some error happened');var message=error.message;ExceptionsManager.handleException(error,true);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}var formattedMessage='Error: '+message;expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe(message);expect(exceptionData.name).toBe('Error');expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new Error('Some error happened');");expect(exceptionData.isFatal).toBe(true);expect(console.error.mock.calls[0]).toHaveLength(1);expect(console.error.mock.calls[0][0]).toBe(formattedMessage);});test('handling a non-fatal Error',function(){var error=new Error('Some error happened');var message=error.message;ExceptionsManager.handleException(error,false);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}var formattedMessage='Error: '+message;expect(exceptionData.message).toBe(formattedMessage);expect(exceptionData.originalMessage).toBe(message);expect(exceptionData.name).toBe('Error');expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new Error('Some error happened');");expect(exceptionData.isFatal).toBe(false);expect(console.error.mock.calls[0]).toHaveLength(1);expect(console.error.mock.calls[0][0]).toBe(formattedMessage);});test('handling a thrown string',function(){var message='Some error happened';ExceptionsManager.handleException(message,true);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(exceptionData.message).toBe(message);expect(exceptionData.originalMessage).toBe(null);expect(exceptionData.name).toBe(null);expect(exceptionData.stack[0].file).toMatch(/ExceptionsManager\.js$/);expect(exceptionData.isFatal).toBe(true);expect(console.error.mock.calls[0]).toEqual([message]);});test('does not pop frames off the stack with framesToPop',function(){function createError(){var error=new Error('Some error happened');error.framesToPop=1;return error;}var error=createError();ExceptionsManager.handleException(error,true);var exceptionData;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(1);exceptionData=logBoxAddException.mock.calls[0][0];}else{expect(nativeReportException.mock.calls.length).toBe(1);exceptionData=nativeReportException.mock.calls[0][0];}expect(getLineFromFrame(exceptionData.stack[0])).toBe("const error = new Error('Some error happened');");});test('logs fatal "warn"-type errors',function(){var error=new Error('This is a fatal... warning?');error.type='warn';ExceptionsManager.handleException(error,true);if(__DEV__){expect(logBoxAddException).toHaveBeenCalled();}else{expect(nativeReportException).toHaveBeenCalled();}});});describe('unstable_setExceptionDecorator',function(){var mockError;beforeEach(function(){mockError=console.error;ExceptionsManager.installConsoleErrorReporter();});afterEach(function(){console.error=console._errorOriginal;delete console._errorOriginal;delete console.reportErrorsAsExceptions;});test('modifying the exception data',function(){var error=new Error('Some error happened');var decorator=jest.fn().mockImplementation(function(data){return Object.assign({},data,{message:'decorated: '+data.message});});ExceptionsManager.handleException(error,true);ExceptionsManager.unstable_setExceptionDecorator(decorator);ExceptionsManager.handleException(error,true);expect(decorator.mock.calls.length).toBe(1);var beforeDecorator=decorator.mock.calls[0][0];var withoutDecoratorInstalled;var afterDecorator;if(__DEV__){expect(logBoxAddException.mock.calls.length).toBe(2);withoutDecoratorInstalled=logBoxAddException.mock.calls[0][0];afterDecorator=logBoxAddException.mock.calls[1][0];}else{expect(nativeReportException.mock.calls.length).toBe(2);withoutDecoratorInstalled=nativeReportException.mock.calls[0][0];afterDecorator=nativeReportException.mock.calls[1][0];}expect(afterDecorator.id).toEqual(beforeDecorator.id);delete withoutDecoratorInstalled.id;delete beforeDecorator.id;delete afterDecorator.id;delete withoutDecoratorInstalled.isComponentError;delete afterDecorator.isComponentError;expect(withoutDecoratorInstalled).toEqual(beforeDecorator);expect(afterDecorator).toEqual(Object.assign({},beforeDecorator,{message:'decorated: '+beforeDecorator.message}));});test('clearing a decorator',function(){var error=new Error('Some error happened');var decorator=jest.fn().mockImplementation(function(data){return Object.assign({},data,{message:'decorated: '+data.message});});ExceptionsManager.unstable_setExceptionDecorator(decorator);ExceptionsManager.unstable_setExceptionDecorator(null);ExceptionsManager.handleException(error,true);expect(decorator).not.toHaveBeenCalled();if(__DEV__){expect(logBoxAddException).toHaveBeenCalled();}else{expect(nativeReportException).toHaveBeenCalled();}});test('prevents decorator recursion from error handler',function(){var error=new Error('Some error happened');var decorator=jest.fn().mockImplementation(function(data){console.error('Logging an error within the decorator');return Object.assign({},data,{message:'decorated: '+data.message});});ExceptionsManager.unstable_setExceptionDecorator(decorator);ExceptionsManager.handleException(error,true);if(__DEV__){expect(logBoxAddException).toHaveBeenCalledTimes(1);expect(logBoxAddException.mock.calls[0][0].message).toMatch(/decorated: .*Some error happened/);}else{expect(nativeReportException).toHaveBeenCalledTimes(1);expect(nativeReportException.mock.calls[0][0].message).toMatch(/decorated: .*Some error happened/);}expect(mockError).toHaveBeenCalledTimes(2);expect(mockError.mock.calls[0][0]).toMatch(/Logging an error within the decorator/);expect(mockError.mock.calls[1][0]).toMatch(/decorated: .*Some error happened/);});test('prevents decorator recursion from console.error',function(){var error=new Error('Some error happened');var decorator=jest.fn().mockImplementation(function(data){console.error('Logging an error within the decorator');return Object.assign({},data,{message:'decorated: '+data.message});});ExceptionsManager.unstable_setExceptionDecorator(decorator);console.error(error);if(__DEV__){expect(logBoxAddException).toHaveBeenCalledTimes(2);expect(logBoxAddException.mock.calls[0][0].message).toMatch(/Logging an error within the decorator/);expect(logBoxAddException.mock.calls[1][0].message).toMatch(/decorated: .*Some error happened/);}else{expect(nativeReportException).toHaveBeenCalledTimes(2);expect(nativeReportException.mock.calls[0][0].message).toMatch(/Logging an error within the decorator/);expect(nativeReportException.mock.calls[1][0].message).toMatch(/decorated: .*Some error happened/);}expect(mockError).toHaveBeenCalledTimes(2);expect(mockError.mock.calls[0][0].toString()).toMatch(/Error: Some error happened/);expect(mockError.mock.calls[1][0]).toMatch(/Logging an error within the decorator/);});test('can handle throwing decorators recursion when exception is thrown',function(){var error=new Error('Some error happened');var decorator=jest.fn().mockImplementation(function(data){throw new Error('Throwing an error within the decorator');});ExceptionsManager.unstable_setExceptionDecorator(decorator);ExceptionsManager.handleException(error,true);if(__DEV__){expect(logBoxAddException).toHaveBeenCalledTimes(1);expect(logBoxAddException.mock.calls[0][0].message).toMatch(/Error: Some error happened/);}else{expect(nativeReportException).toHaveBeenCalledTimes(1);expect(nativeReportException.mock.calls[0][0].message).toMatch(/Error: Some error happened/);}expect(mockError).toHaveBeenCalledTimes(1);expect(mockError.mock.calls[0][0]).toMatch(/Error: Some error happened/);});test('can handle throwing decorators recursion when exception is logged',function(){var error=new Error('Some error happened');var decorator=jest.fn().mockImplementation(function(data){throw new Error('Throwing an error within the decorator');});ExceptionsManager.unstable_setExceptionDecorator(decorator);console.error(error);if(__DEV__){expect(logBoxAddException).toHaveBeenCalledTimes(1);expect(logBoxAddException.mock.calls[0][0].message).toMatch(/Error: Some error happened/);}else{expect(nativeReportException).toHaveBeenCalledTimes(1);expect(nativeReportException.mock.calls[0][0].message).toMatch(/Error: Some error happened/);}expect(mockError).toHaveBeenCalledTimes(1);expect(mockError.mock.calls[0][0].toString()).toMatch(/Error: Some error happened/);});});describe('Errors with custom extraData',function(){test('ExtendedErrors may pass custom extraData using the decoratedExtraDataKey symbol',function(){var error=new Error('Some error happened');error[ExceptionsManager.decoratedExtraDataKey]={foo:'bar'};ExceptionsManager.handleException(error,true);if(__DEV__){var _logBoxAddException$m;expect(logBoxAddException).toHaveBeenCalledTimes(1);expect((_logBoxAddException$m=logBoxAddException.mock.calls[0][0].extraData)==null?void 0:_logBoxAddException$m.foo).toBe('bar');}else{var _nativeReportExceptio;expect(nativeReportException).toHaveBeenCalledTimes(1);expect((_nativeReportExceptio=nativeReportException.mock.calls[0][0].extraData)==null?void 0:_nativeReportExceptio.foo).toBe('bar');}});});});}var linesByFile=new Map();function getLineFromFrame(_ref){var lineNumber=_ref.lineNumber,file=_ref.file;if(file==null){return null;}var cleanedFile=cleanFileName(file);var lines=linesByFile.get(cleanedFile)||fs.readFileSync(cleanedFile,'utf8').split('\n');if(!linesByFile.has(cleanedFile)){linesByFile.set(cleanedFile,lines);}return(lines[lineNumber-1]||'').trim();}function getFirstFrameInThisFile(stack){return stack.find(function(_ref2){var file=_ref2.file;return file.endsWith(path.basename(module.filename));});}function cleanFileName(file){return file.replace(/^.+? \((?=\/)/,'');}