var _ReactWarningFixtures=require("./__fixtures__/ReactWarningFixtures");var React=_interopRequireWildcard(require("react"));var _jsxRuntime=require("react/jsx-runtime");var _this=this,_jsxFileName="/Users/apratt/dev/tmp/react-native/Libraries/LogBox/__tests__/LogBox-integration-test.js";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var LogBoxData=require('../Data/LogBoxData');var TestRenderer=require('react-test-renderer');var installLogBox=function installLogBox(){var LogBox=require('../LogBox');LogBox.install();};var uninstallLogBox=function uninstallLogBox(){var LogBox=require('../LogBox');LogBox.uninstall();};var BEFORE_SLASH_RE=/(?:\/[a-zA-Z]+\/)(.+?)(?:\/.+)\//;var cleanPath=function cleanPath(message){return message.replace(BEFORE_SLASH_RE,'/path/to/');};var cleanLog=function cleanLog(logs){return logs.map(function(log){return Object.assign({},log,{componentStack:log.componentStack.map(function(stack){return Object.assign({},stack,{fileName:cleanPath(stack.fileName)});})});});};describe.skip('LogBox',function(){var _console=console,error=_console.error,warn=_console.warn;var mockError=jest.fn();var mockWarn=jest.fn();beforeEach(function(){jest.resetModules();jest.restoreAllMocks();mockError.mockClear();mockWarn.mockClear();console.error=mockError;console.warn=mockWarn;});afterEach(function(){uninstallLogBox();console.error=error;console.warn=warn;});it('integrates with React and handles a key error in LogBox',function(){var spy=jest.spyOn(LogBoxData,'addLog');installLogBox();jest.spyOn(console,'error');var output=TestRenderer.create((0,_jsxRuntime.jsx)(_ReactWarningFixtures.DoesNotUseKey,{}));expect(output).toBeDefined();expect(mockWarn).not.toBeCalled();expect(console.error.mock.calls[0].map(cleanPath)).toMatchSnapshot('Log sent from React');expect(cleanLog(spy.mock.calls[0])).toMatchSnapshot('Log added to LogBox');expect(mockError.mock.calls[0].map(cleanPath)).toMatchSnapshot('Log passed to console error');expect(mockError.mock.calls[0][0].startsWith('Warning: ')).toBe(true);});it('integrates with React and handles a fragment warning in LogBox',function(){var spy=jest.spyOn(LogBoxData,'addLog');installLogBox();jest.spyOn(console,'error');var output=TestRenderer.create((0,_jsxRuntime.jsx)(_ReactWarningFixtures.FragmentWithProp,{}));expect(output).toBeDefined();expect(mockWarn).not.toBeCalled();expect(console.error.mock.calls[0].map(cleanPath)).toMatchSnapshot('Log sent from React');expect(cleanLog(spy.mock.calls[0])).toMatchSnapshot('Log added to LogBox');expect(mockError.mock.calls[0].map(cleanPath)).toMatchSnapshot('Log passed to console error');expect(mockError.mock.calls[0][0].startsWith('Warning: ')).toBe(true);});});