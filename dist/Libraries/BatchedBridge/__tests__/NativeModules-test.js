'use strict';var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));jest.unmock('../NativeModules');var BatchedBridge;var NativeModules;var MODULE_IDS=0;var METHOD_IDS=1;var PARAMS=2;var CALL_ID=3;var assertQueue=function assertQueue(flushedQueue,index,moduleID,methodID,params){expect(flushedQueue[MODULE_IDS][index]).toEqual(moduleID);expect(flushedQueue[METHOD_IDS][index]).toEqual(methodID);expect(flushedQueue[PARAMS][index]).toEqual(params);};describe('MessageQueue',function(){beforeEach(function(){jest.resetModules();global.__fbBatchedBridgeConfig=require('../__mocks__/MessageQueueTestConfig');BatchedBridge=require('../BatchedBridge');NativeModules=require('../NativeModules');});it('should generate native modules',function(){NativeModules.RemoteModule1.remoteMethod('foo');var flushedQueue=BatchedBridge.flushedQueue();assertQueue(flushedQueue,0,0,0,['foo']);});it('should make round trip and clear memory',function(){var onFail=jest.fn();var onSucc=jest.fn();NativeModules.RemoteModule1.promiseMethod('paloAlto','menloPark',onFail,onSucc);NativeModules.RemoteModule2.promiseMethod('mac','windows',onFail,onSucc);var resultingRemoteInvocations=BatchedBridge.flushedQueue();expect(resultingRemoteInvocations.length).toBe(4);expect(resultingRemoteInvocations[MODULE_IDS].length).toBe(2);expect(resultingRemoteInvocations[METHOD_IDS].length).toBe(2);expect(resultingRemoteInvocations[PARAMS].length).toBe(2);expect(typeof resultingRemoteInvocations[CALL_ID]).toEqual('number');expect(resultingRemoteInvocations[0][0]).toBe(0);expect(resultingRemoteInvocations[1][0]).toBe(1);expect([resultingRemoteInvocations[2][0][0],resultingRemoteInvocations[2][0][1]]).toEqual(['paloAlto','menloPark']);var firstFailCBID=resultingRemoteInvocations[2][0][2];var firstSuccCBID=resultingRemoteInvocations[2][0][3];expect(resultingRemoteInvocations[0][1]).toBe(1);expect(resultingRemoteInvocations[1][1]).toBe(1);expect([resultingRemoteInvocations[2][1][0],resultingRemoteInvocations[2][1][1]]).toEqual(['mac','windows']);var secondFailCBID=resultingRemoteInvocations[2][1][2];var secondSuccCBID=resultingRemoteInvocations[2][1][3];BatchedBridge.__invokeCallback(firstFailCBID,['firstFailure']);expect(function(){BatchedBridge.__invokeCallback(firstSuccCBID,['firstSucc']);}).toThrow();expect(onFail.mock.calls.length).toBe(1);expect(onSucc.mock.calls.length).toBe(0);BatchedBridge.__invokeCallback(secondSuccCBID,['secondSucc']);expect(function(){BatchedBridge.__invokeCallback(secondFailCBID,['secondFail']);}).toThrow();expect(onFail.mock.calls.length).toBe(1);expect(onSucc.mock.calls.length).toBe(1);});it('promise-returning methods (type=promise)',(0,_asyncToGenerator2.default)(function*(){var promise1=NativeModules.RemoteModule1.promiseReturningMethod('paloAlto','menloPark');var promise2=NativeModules.RemoteModule2.promiseReturningMethod('mac','windows');var resultingRemoteInvocations=BatchedBridge.flushedQueue();expect(resultingRemoteInvocations.length).toBe(4);expect(resultingRemoteInvocations[MODULE_IDS].length).toBe(2);expect(resultingRemoteInvocations[METHOD_IDS].length).toBe(2);expect(resultingRemoteInvocations[PARAMS].length).toBe(2);expect(typeof resultingRemoteInvocations[CALL_ID]).toEqual('number');expect(resultingRemoteInvocations[0][0]).toBe(0);expect(resultingRemoteInvocations[1][0]).toBe(2);expect([resultingRemoteInvocations[2][0][0],resultingRemoteInvocations[2][0][1]]).toEqual(['paloAlto','menloPark']);var firstSuccCBID=resultingRemoteInvocations[2][0][2];var firstFailCBID=resultingRemoteInvocations[2][0][3];expect(resultingRemoteInvocations[0][1]).toBe(1);expect(resultingRemoteInvocations[1][1]).toBe(2);expect([resultingRemoteInvocations[2][1][0],resultingRemoteInvocations[2][1][1]]).toEqual(['mac','windows']);var secondSuccCBID=resultingRemoteInvocations[2][1][2];var secondFailCBID=resultingRemoteInvocations[2][1][3];BatchedBridge.__invokeCallback(firstFailCBID,[{message:'firstFailure'}]);expect(function(){BatchedBridge.__invokeCallback(firstSuccCBID,['firstSucc']);}).toThrow();yield expect(promise1).rejects.toBeInstanceOf(Error);yield expect(promise1).rejects.toMatchObject({message:'firstFailure'});BatchedBridge.__invokeCallback(secondSuccCBID,['secondSucc']);expect(function(){BatchedBridge.__invokeCallback(secondFailCBID,['secondFail']);}).toThrow();yield promise2;}));describe('sync methods',function(){afterEach(function(){delete global.nativeCallSyncHook;});it('throwing an exception',function(){global.nativeCallSyncHook=jest.fn(function(){throw new Error('firstFailure');});var error;try{NativeModules.RemoteModule1.syncMethod('paloAlto','menloPark');}catch(e){error=e;}expect(global.nativeCallSyncHook).toBeCalledTimes(1);expect(global.nativeCallSyncHook).toBeCalledWith(0,3,['paloAlto','menloPark']);expect(error).toBeInstanceOf(Error);expect(error).toMatchObject({message:'firstFailure'});});it('returning a value',function(){global.nativeCallSyncHook=jest.fn(function(){return'secondSucc';});var result=NativeModules.RemoteModule2.syncMethod('mac','windows');expect(global.nativeCallSyncHook).toBeCalledTimes(1);expect(global.nativeCallSyncHook).toBeCalledWith(1,3,['mac','windows']);expect(result).toBe('secondSucc');});});});