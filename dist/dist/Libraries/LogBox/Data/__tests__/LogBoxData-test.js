'use strict';jest.mock('../../../Core/Devtools/parseErrorStack',function(){return{__esModule:true,default:jest.fn(function(){return[];})};});jest.mock('../../../Core/ExceptionsManager');var ExceptionsManager=require('../../../Core/ExceptionsManager');var LogBoxData=require('../LogBoxData');var registry=function registry(){var observer=jest.fn();LogBoxData.observe(observer).unsubscribe();return Array.from(observer.mock.calls[0][0].logs);};var filteredRegistry=function filteredRegistry(){var observer=jest.fn();LogBoxData.observe(observer).unsubscribe();return Array.from(observer.mock.calls[0][0].logs);};var disabledState=function disabledState(){var observer=jest.fn();LogBoxData.observe(observer).unsubscribe();return observer.mock.calls[0][0].isDisabled;};var selectedLogIndex=function selectedLogIndex(){var observer=jest.fn();LogBoxData.observe(observer).unsubscribe();return observer.mock.calls[0][0].selectedLogIndex;};var observe=function observe(){var observer=jest.fn();return{observer:observer,subscription:LogBoxData.observe(observer)};};var addLogs=function addLogs(logs,options){logs.forEach(function(message){LogBoxData.addLog({level:'warn',message:{content:message,substitutions:[]},category:message,componentStack:[]});if(options==null||options.flush!==false){jest.runOnlyPendingTimers();}});};var addSoftErrors=function addSoftErrors(errors,options){errors.forEach(function(error){LogBoxData.addException(Object.assign({message:'',isComponentError:false,originalMessage:'',name:'console.error',componentStack:'',stack:[],id:0,isFatal:false},typeof error==='string'?{message:error,originalMessage:error}:error));if(options==null||options.flush!==false){jest.runOnlyPendingTimers();}});};var addFatalErrors=function addFatalErrors(errors,options){errors.forEach(function(error){LogBoxData.addException(Object.assign({message:'',isComponentError:false,originalMessage:'',name:'console.error',componentStack:'',stack:[],id:0,isFatal:true},typeof error==='string'?{message:error,originalMessage:error}:error));if(options==null||options.flush!==false){jest.runOnlyPendingTimers();jest.runOnlyPendingTimers();}});};var addSyntaxError=function addSyntaxError(options){addFatalErrors([{message:"\n  197 | });\n  198 |\n> 199 | export default CrashReactApp;\n      | ^\n  200 |",originalMessage:"TransformError SyntaxError: /path/to/RKJSModules/Apps/CrashReact/CrashReactApp.js: 'import' and 'export' may only appear at the top level (199:0)\n  197 | });\n  198 |\n> 199 | export default CrashReactApp;\n      | ^\n  200 |"}],options);};beforeEach(function(){jest.resetModules();});var flushToObservers=function flushToObservers(){jest.runOnlyPendingTimers();};describe('LogBoxData',function(){it('adds and dismisses logs',function(){addLogs(['A']);addSoftErrors(['B']);addFatalErrors(['C']);addSyntaxError();expect(registry().length).toBe(4);expect(registry()[0]).toBeDefined();expect(registry()[1]).toBeDefined();LogBoxData.dismiss(registry()[0]);expect(registry().length).toBe(3);LogBoxData.dismiss(registry()[0]);expect(registry().length).toBe(2);LogBoxData.dismiss(registry()[0]);expect(registry().length).toBe(1);LogBoxData.dismiss(registry()[0]);expect(registry().length).toBe(0);expect(registry()[0]).toBeUndefined();});it('clears all logs',function(){addLogs(['A','B']);addSoftErrors(['C','D']);addFatalErrors(['E','F']);addSyntaxError();expect(registry().length).toBe(7);expect(selectedLogIndex()).toBe(6);LogBoxData.clear();expect(registry().length).toBe(0);expect(selectedLogIndex()).toBe(-1);});it('clears only warnings',function(){addLogs(['A','B']);addSoftErrors(['C','D','E']);addSyntaxError();expect(registry().length).toBe(6);expect(selectedLogIndex()).toBe(5);LogBoxData.clearWarnings();expect(registry().length).toBe(4);expect(selectedLogIndex()).toBe(3);});it('clears errors and fatals, but not syntax errors.',function(){addLogs(['A','B']);addSoftErrors(['C','D','E']);addFatalErrors(['F']);addSyntaxError();expect(registry().length).toBe(7);expect(selectedLogIndex()).toBe(6);LogBoxData.clearErrors();expect(registry().length).toBe(3);expect(selectedLogIndex()).toBe(2);});it('clears all types except syntax errors',function(){addLogs(['A','B']);addSoftErrors(['C','D','E']);addFatalErrors(['F']);addSyntaxError();expect(registry().length).toBe(7);expect(selectedLogIndex()).toBe(6);LogBoxData.clearErrors();LogBoxData.clearWarnings();expect(registry().length).toBe(1);expect(selectedLogIndex()).toBe(0);});it('keeps logs in chronological order',function(){addLogs(['A'],{flush:false});addSoftErrors(['B'],{flush:false});addFatalErrors(['C'],{flush:false});jest.runAllTimers();addLogs(['D']);var logs=registry();expect(logs.length).toBe(4);expect(logs[0].category).toEqual('A');expect(logs[1].category).toEqual('B');expect(logs[2].category).toEqual('C');expect(logs[3].category).toEqual('D');addLogs(['A']);logs=registry();expect(logs.length).toBe(5);expect(logs[0].category).toEqual('A');expect(logs[1].category).toEqual('B');expect(logs[2].category).toEqual('C');expect(logs[3].category).toEqual('D');expect(logs[4].category).toEqual('A');});it('sets the selectedLogIndex',function(){expect(selectedLogIndex()).toBe(-1);LogBoxData.setSelectedLog(1);expect(selectedLogIndex()).toBe(1);});it('does not set the selectedLogIndex for warnings',function(){addLogs(['A']);expect(selectedLogIndex()).toBe(-1);});it('does not set the selectedLogIndex for soft errors',function(){addSoftErrors(['A']);expect(selectedLogIndex()).toBe(-1);});it('sets the selectedLogIndex to the first fatal error (after symbolication)',function(){addFatalErrors(['A'],{flush:false});jest.runOnlyPendingTimers();jest.advanceTimersByTime(10);jest.runAllTimers();expect(selectedLogIndex()).toBe(0);addLogs(['B'],{flush:false});addFatalErrors(['C'],{flush:false});jest.runOnlyPendingTimers();jest.advanceTimersByTime(10);jest.runAllTimers();expect(selectedLogIndex()).toBe(0);});it('sets the selectedLogIndex to the first fatal error (hitting timeout limit)',function(){addFatalErrors(['A'],{flush:false});jest.runOnlyPendingTimers();jest.advanceTimersByTime(1001);jest.runAllTimers();expect(selectedLogIndex()).toBe(0);addLogs(['B']);addFatalErrors(['C']);jest.runOnlyPendingTimers();jest.advanceTimersByTime(1001);jest.runAllTimers();expect(selectedLogIndex()).toBe(0);});it('sets the selectedLogIndex to the last syntax error',function(){addSyntaxError();expect(selectedLogIndex()).toBe(0);addLogs(['B']);addSyntaxError();expect(selectedLogIndex()).toBe(2);});it('keeps selectedLogIndex set to the syntax error even when a new fatal is added',function(){addSyntaxError();expect(selectedLogIndex()).toBe(0);addLogs(['B']);addFatalErrors(['C']);expect(selectedLogIndex()).toBe(0);});it('keeps selectedLogIndex set to the syntax error even when explicitly changed',function(){addSyntaxError();expect(selectedLogIndex()).toBe(0);LogBoxData.setSelectedLog(1);expect(selectedLogIndex()).toBe(0);});it('increments the count of previous log with matching category (logs)',function(){addLogs(['A','B']);var logs=registry();expect(logs.length).toBe(2);expect(logs[0].category).toEqual('A');expect(logs[0].count).toBe(1);expect(logs[1].category).toEqual('B');expect(logs[1].count).toBe(1);addLogs(['B']);logs=registry();expect(logs.length).toBe(2);expect(logs[0].category).toEqual('A');expect(logs[0].count).toBe(1);expect(logs[1].category).toEqual('B');expect(logs[1].count).toBe(2);});it('increments the count of previous log with matching category (errors)',function(){addFatalErrors(['A','B']);var logs=registry();expect(logs.length).toBe(2);expect(logs[0].category).toEqual('A');expect(logs[0].count).toBe(1);expect(logs[1].category).toEqual('B');expect(logs[1].count).toBe(1);addSoftErrors(['B']);logs=registry();expect(logs.length).toBe(2);expect(logs[0].category).toEqual('A');expect(logs[0].count).toBe(1);expect(logs[1].category).toEqual('B');expect(logs[1].count).toBe(2);});it('increments the count of previous log with matching category (syntax)',function(){addSyntaxError();var logs=registry();expect(logs.length).toBe(1);expect(logs[0].count).toBe(1);addSyntaxError();logs=registry();expect(logs.length).toBe(1);expect(logs[0].count).toBe(2);});it('adding same pattern multiple times',function(){expect(LogBoxData.getIgnorePatterns().length).toBe(0);LogBoxData.addIgnorePatterns(['abc']);expect(LogBoxData.getIgnorePatterns().length).toBe(1);LogBoxData.addIgnorePatterns([/abc/]);expect(LogBoxData.getIgnorePatterns().length).toBe(2);LogBoxData.addIgnorePatterns(['abc']);expect(LogBoxData.getIgnorePatterns().length).toBe(2);LogBoxData.addIgnorePatterns([/abc/]);expect(LogBoxData.getIgnorePatterns().length).toBe(2);});it('adding duplicated patterns',function(){expect(LogBoxData.getIgnorePatterns().length).toBe(0);LogBoxData.addIgnorePatterns(['abc',/ab/,/abc/,/abc/,'abc']);expect(LogBoxData.getIgnorePatterns().length).toBe(3);LogBoxData.addIgnorePatterns([/ab/,/abc/]);expect(LogBoxData.getIgnorePatterns().length).toBe(3);});it('ignores logs matching patterns (logs)',function(){addLogs(['A!','B?','C!']);expect(filteredRegistry().length).toBe(3);LogBoxData.addIgnorePatterns(['!']);expect(filteredRegistry().length).toBe(1);LogBoxData.addIgnorePatterns(['?']);expect(filteredRegistry().length).toBe(0);});it('ignores logs matching patterns (errors)',function(){addSoftErrors(['A!','B?']);addFatalErrors(['C!']);expect(filteredRegistry().length).toBe(3);LogBoxData.addIgnorePatterns(['!']);expect(filteredRegistry().length).toBe(1);LogBoxData.addIgnorePatterns(['?']);expect(filteredRegistry().length).toBe(0);});it('ignores matching regexs or pattern (logs)',function(){addLogs(['There are 4 dogs','There are 3 cats','There are H cats']);expect(filteredRegistry().length).toBe(3);LogBoxData.addIgnorePatterns(['dogs']);expect(filteredRegistry().length).toBe(2);LogBoxData.addIgnorePatterns([/There are \d+ cats/]);expect(filteredRegistry().length).toBe(1);LogBoxData.addIgnorePatterns(['cats']);expect(filteredRegistry().length).toBe(0);});it('ignores matching regexs or pattern (errors)',function(){addSoftErrors(['There are 4 dogs','There are 3 cats']);addFatalErrors(['There are H cats']);expect(filteredRegistry().length).toBe(3);LogBoxData.addIgnorePatterns(['dogs']);expect(filteredRegistry().length).toBe(2);LogBoxData.addIgnorePatterns([/There are \d+ cats/]);expect(filteredRegistry().length).toBe(1);LogBoxData.addIgnorePatterns(['cats']);expect(filteredRegistry().length).toBe(0);});it('ignores all logs except fatals when disabled',function(){addLogs(['A!']);addSoftErrors(['B?']);addFatalErrors(['C!']);addSyntaxError();expect(registry().length).toBe(4);expect(disabledState()).toBe(false);LogBoxData.setDisabled(true);expect(registry().length).toBe(4);expect(disabledState()).toBe(true);LogBoxData.setDisabled(false);expect(registry().length).toBe(4);expect(disabledState()).toBe(false);});it('immediately updates new observers',function(){var _observe=observe(),observerOne=_observe.observer;expect(observerOne.mock.calls.length).toBe(1);var observerTwo=jest.fn();LogBoxData.observe(observerTwo).unsubscribe();expect(observerTwo.mock.calls.length).toBe(1);expect(observerOne.mock.calls[0][0]).toEqual(observerTwo.mock.calls[0][0]);});it('sends batched updates asynchronously',function(){var _observe2=observe(),observer=_observe2.observer;expect(observer.mock.calls.length).toBe(1);addLogs(['A']);flushToObservers();expect(observer.mock.calls.length).toBe(2);expect(observer.mock.calls[0][0].logs).toBe(observer.mock.calls[1][0].logs);});it('stops sending updates to unsubscribed observers',function(){var _observe3=observe(),observerOne=_observe3.observer,subscription=_observe3.subscription;subscription.unsubscribe();expect(observerOne.mock.calls.length).toBe(1);var observerTwo=jest.fn();LogBoxData.observe(observerTwo).unsubscribe();expect(observerTwo.mock.calls.length).toBe(1);expect(observerOne.mock.calls[0][0]).toEqual(observerTwo.mock.calls[0][0]);});it('updates observers when a log is added or dismissed',function(){var _observe4=observe(),observer=_observe4.observer;expect(observer.mock.calls.length).toBe(1);addLogs(['A']);flushToObservers();expect(observer.mock.calls.length).toBe(2);var lastLog=Array.from(observer.mock.calls[1][0].logs)[0];LogBoxData.dismiss(lastLog);flushToObservers();expect(observer.mock.calls.length).toBe(3);LogBoxData.dismiss(lastLog);flushToObservers();expect(observer.mock.calls.length).toBe(3);});it('updates observers when cleared',function(){var _observe5=observe(),observer=_observe5.observer;expect(observer.mock.calls.length).toBe(1);addLogs(['A']);flushToObservers();expect(observer.mock.calls.length).toBe(2);LogBoxData.clear();flushToObservers();expect(observer.mock.calls.length).toBe(3);LogBoxData.clear();flushToObservers();expect(observer.mock.calls.length).toBe(3);});it('updates observers when warnings cleared',function(){var _observe6=observe(),observer=_observe6.observer;expect(observer.mock.calls.length).toBe(1);addLogs(['A']);addSoftErrors(['B']);addFatalErrors(['C']);addSyntaxError();expect(observer.mock.calls.length).toBe(5);LogBoxData.clearWarnings();flushToObservers();expect(observer.mock.calls.length).toBe(6);LogBoxData.clearWarnings();flushToObservers();expect(observer.mock.calls.length).toBe(6);});it('updates observers when errors cleared',function(){var _observe7=observe(),observer=_observe7.observer;expect(observer.mock.calls.length).toBe(1);addLogs(['A']);addSoftErrors(['B']);addFatalErrors(['C']);addSyntaxError();expect(observer.mock.calls.length).toBe(5);LogBoxData.clearErrors();flushToObservers();expect(observer.mock.calls.length).toBe(6);LogBoxData.clearErrors();flushToObservers();expect(observer.mock.calls.length).toBe(6);});it('updates observers when an ignore pattern is added',function(){var _observe8=observe(),observer=_observe8.observer;expect(observer.mock.calls.length).toBe(1);LogBoxData.addIgnorePatterns(['?']);flushToObservers();expect(observer.mock.calls.length).toBe(2);LogBoxData.addIgnorePatterns(['!']);flushToObservers();expect(observer.mock.calls.length).toBe(3);LogBoxData.addIgnorePatterns(['!']);flushToObservers();expect(observer.mock.calls.length).toBe(3);});it('updates observers when disabled or enabled',function(){var _observe9=observe(),observer=_observe9.observer;expect(observer.mock.calls.length).toBe(1);LogBoxData.setDisabled(true);flushToObservers();expect(observer.mock.calls.length).toBe(2);LogBoxData.setDisabled(true);flushToObservers();expect(observer.mock.calls.length).toBe(2);LogBoxData.setDisabled(false);flushToObservers();expect(observer.mock.calls.length).toBe(3);LogBoxData.setDisabled(false);flushToObservers();expect(observer.mock.calls.length).toBe(3);});it('reportLogBoxError creates a native redbox with a componentStack',function(){LogBoxData.reportLogBoxError(new Error('Simulated Error'),'    in Component (file.js:1)');var receivedError=ExceptionsManager.handleException.mock.calls[0][0];expect(receivedError.componentStack).toBe('    in Component (file.js:1)');expect(receivedError.message).toBe('An error was thrown when attempting to render log messages via LogBox.\n\nSimulated Error');});it('reportLogBoxError creates a native redbox without a componentStack',function(){LogBoxData.reportLogBoxError(new Error('Simulated Error'));var receivedError=ExceptionsManager.handleException.mock.calls[0][0];expect(receivedError.componentStack).toBeUndefined();expect(receivedError.message).toBe('An error was thrown when attempting to render log messages via LogBox.\n\nSimulated Error');});it('reportLogBoxError creates an error message that is also ignored',function(){LogBoxData.reportLogBoxError(new Error('Simulated Error'));var receivedErrorMessage=ExceptionsManager.handleException.mock.calls[0][0].message;expect(LogBoxData.isLogBoxErrorMessage(receivedErrorMessage)).toBe(true);expect(LogBoxData.isLogBoxErrorMessage('Some other error')).toBe(false);});it('getAppInfo returns null without any function registered',function(){expect(LogBoxData.getAppInfo()).toBe(null);});it('getAppInfo returns the registered app info',function(){var info={appVersion:'App Version',engine:'Hermes'};LogBoxData.setAppInfo(function(){return info;});expect(LogBoxData.getAppInfo()).toBe(info);});});