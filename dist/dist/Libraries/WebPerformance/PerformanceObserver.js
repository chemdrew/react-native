var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.PerformanceObserverEntryList=void 0;var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _warnOnce=_interopRequireDefault(require("../Utilities/warnOnce"));var _NativePerformanceObserver=_interopRequireWildcard(require("./NativePerformanceObserver"));var _PerformanceEntry=require("./PerformanceEntry");var _PerformanceEventTiming=require("./PerformanceEventTiming");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function rawToPerformanceEntryType(type){switch(type){case _NativePerformanceObserver.RawPerformanceEntryTypeValues.MARK:return'mark';case _NativePerformanceObserver.RawPerformanceEntryTypeValues.MEASURE:return'measure';case _NativePerformanceObserver.RawPerformanceEntryTypeValues.EVENT:return'event';default:throw new TypeError("unexpected performance entry type received: "+type);}}function rawToPerformanceEntry(entry){if(entry.entryType===_NativePerformanceObserver.RawPerformanceEntryTypeValues.EVENT){return new _PerformanceEventTiming.PerformanceEventTiming({name:entry.name,startTime:entry.startTime,duration:entry.duration,processingStart:entry.processingStart,processingEnd:entry.processingEnd,interactionId:entry.interactionId});}else{return new _PerformanceEntry.PerformanceEntry({name:entry.name,entryType:rawToPerformanceEntryType(entry.entryType),startTime:entry.startTime,duration:entry.duration});}}var PerformanceObserverEntryList=function(){function PerformanceObserverEntryList(entries){(0,_classCallCheck2.default)(this,PerformanceObserverEntryList);this._entries=entries;}(0,_createClass2.default)(PerformanceObserverEntryList,[{key:"getEntries",value:function getEntries(){return this._entries;}},{key:"getEntriesByType",value:function getEntriesByType(type){return this._entries.filter(function(entry){return entry.entryType===type;});}},{key:"getEntriesByName",value:function getEntriesByName(name,type){if(type===undefined){return this._entries.filter(function(entry){return entry.name===name;});}else{return this._entries.filter(function(entry){return entry.name===name&&entry.entryType===type;});}}}]);return PerformanceObserverEntryList;}();exports.PerformanceObserverEntryList=PerformanceObserverEntryList;var observerCountPerEntryType=new Map();var registeredObservers=new Map();var isOnPerformanceEntryCallbackSet=false;var onPerformanceEntry=function onPerformanceEntry(){var _entryResult$entries;if(!_NativePerformanceObserver.default){return;}var entryResult=_NativePerformanceObserver.default.popPendingEntries();var rawEntries=(_entryResult$entries=entryResult==null?void 0:entryResult.entries)!=null?_entryResult$entries:[];var droppedEntriesCount=entryResult==null?void 0:entryResult.droppedEntriesCount;if(rawEntries.length===0){return;}var entries=rawEntries.map(rawToPerformanceEntry);var _loop=function _loop(observerConfig,_observer){var entriesForObserver=entries.filter(function(entry){return observerConfig.entryTypes.has(entry.entryType)!==-1;});observerConfig.callback(new PerformanceObserverEntryList(entriesForObserver),_observer,droppedEntriesCount);};for(var _ref of registeredObservers.entries()){var _ref2=(0,_slicedToArray2.default)(_ref,2);var _observer=_ref2[0];var observerConfig=_ref2[1];_loop(observerConfig,_observer);}};function warnNoNativePerformanceObserver(){(0,_warnOnce.default)('missing-native-performance-observer','Missing native implementation of PerformanceObserver');}var PerformanceObserver=function(){function PerformanceObserver(callback){(0,_classCallCheck2.default)(this,PerformanceObserver);this._callback=callback;}(0,_createClass2.default)(PerformanceObserver,[{key:"observe",value:function observe(options){var _registeredObservers$;if(!_NativePerformanceObserver.default){warnNoNativePerformanceObserver();return;}this._validateObserveOptions(options);var requestedEntryTypes;if(options.entryTypes){this._type='multiple';requestedEntryTypes=new Set(options.entryTypes);}else{this._type='single';requestedEntryTypes=new Set([options.type]);}var currentEntryTypes=(_registeredObservers$=registeredObservers.get(this))==null?void 0:_registeredObservers$.entryTypes;var nextEntryTypes=currentEntryTypes?union(requestedEntryTypes,currentEntryTypes):requestedEntryTypes;if(currentEntryTypes&&currentEntryTypes.size===nextEntryTypes.size){return;}registeredObservers.set(this,{callback:this._callback,entryTypes:nextEntryTypes});if(!isOnPerformanceEntryCallbackSet){_NativePerformanceObserver.default.setOnPerformanceEntryCallback(onPerformanceEntry);isOnPerformanceEntryCallbackSet=true;}var newEntryTypes=currentEntryTypes?difference(requestedEntryTypes,currentEntryTypes):requestedEntryTypes;for(var type of newEntryTypes){var _observerCountPerEntr;if(!observerCountPerEntryType.has(type)){_NativePerformanceObserver.default.startReporting(type);}observerCountPerEntryType.set(type,((_observerCountPerEntr=observerCountPerEntryType.get(type))!=null?_observerCountPerEntr:0)+1);}}},{key:"disconnect",value:function disconnect(){if(!_NativePerformanceObserver.default){warnNoNativePerformanceObserver();return;}var observerConfig=registeredObservers.get(this);if(!observerConfig){return;}for(var type of observerConfig.entryTypes){var _observerCountPerEntr2;var numberOfObserversForThisType=(_observerCountPerEntr2=observerCountPerEntryType.get(type))!=null?_observerCountPerEntr2:0;if(numberOfObserversForThisType===1){observerCountPerEntryType.delete(type);_NativePerformanceObserver.default.stopReporting(type);}else if(numberOfObserversForThisType!==0){observerCountPerEntryType.set(type,numberOfObserversForThisType-1);}}registeredObservers.delete(this);if(registeredObservers.size===0){_NativePerformanceObserver.default.setOnPerformanceEntryCallback(undefined);isOnPerformanceEntryCallbackSet=false;}}},{key:"_validateObserveOptions",value:function _validateObserveOptions(options){var type=options.type,entryTypes=options.entryTypes;if(!type&&!entryTypes){throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.");}if(entryTypes&&type){throw new TypeError("Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.");}if(this._type==='multiple'&&type){throw new Error("Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})");}if(this._type==='single'&&entryTypes){throw new Error("Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})");}}}]);return PerformanceObserver;}();exports.default=PerformanceObserver;PerformanceObserver.supportedEntryTypes=Object.freeze(['mark','measure','event']);function union(a,b){return new Set([].concat((0,_toConsumableArray2.default)(a),(0,_toConsumableArray2.default)(b)));}function difference(a,b){return new Set((0,_toConsumableArray2.default)(a).filter(function(x){return!b.has(x);}));}