'use strict';var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _jsxRuntime=require("react/jsx-runtime");var _jsxFileName="/Users/apratt/dev/tmp/react-native/ReactAndroid/src/androidTest/js/TextInputTestModule.js";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var React=require('react');var _require=require('react-native'),NativeModules=_require.NativeModules,StyleSheet=_require.StyleSheet,Text=_require.Text,TextInput=_require.TextInput,View=_require.View;var BatchedBridge=require('react-native/Libraries/BatchedBridge/BatchedBridge');var Recording=NativeModules.Recording;var app;var TokenizedTextExample=function(_React$Component){(0,_inherits2.default)(TokenizedTextExample,_React$Component);var _super=_createSuper(TokenizedTextExample);function TokenizedTextExample(props){var _this;(0,_classCallCheck2.default)(this,TokenizedTextExample);_this=_super.call(this,props);_this.state={text:''};return _this;}(0,_createClass2.default)(TokenizedTextExample,[{key:"render",value:function render(){var _this2=this;var delimiter=/\s+/;var _text=this.state.text;var token,index,parts=[];while(_text){delimiter.lastIndex=0;token=delimiter.exec(_text);if(token===null){break;}index=token.index;if(token[0].length===0){index=1;}parts.push(_text.substr(0,index));parts.push(token[0]);index=index+token[0].length;_text=_text.slice(index);}parts.push(_text);parts=parts.map(function(text){if(/^#/.test(text)){return(0,_jsxRuntime.jsx)(Text,{style:styles.hashtag,children:text},text);}else{return text;}});return(0,_jsxRuntime.jsx)(View,{children:(0,_jsxRuntime.jsx)(TextInput,{testID:"tokenizedInput",multiline:true,style:styles.multiline,onChangeText:function onChangeText(text){_this2.setState({text:text});},children:(0,_jsxRuntime.jsx)(Text,{children:parts})})});}}]);return TokenizedTextExample;}(React.Component);var TextInputTestApp=function(_React$Component2){(0,_inherits2.default)(TextInputTestApp,_React$Component2);var _super2=_createSuper(TextInputTestApp);function TextInputTestApp(){var _this3;(0,_classCallCheck2.default)(this,TextInputTestApp);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this3=_super2.call.apply(_super2,[this].concat(args));_this3.handleOnSubmitEditing=function(record){Recording.record(record);};return _this3;}(0,_createClass2.default)(TextInputTestApp,[{key:"componentDidMount",value:function componentDidMount(){app=this;}},{key:"render",value:function render(){return(0,_jsxRuntime.jsxs)(View,{style:styles.container,children:[(0,_jsxRuntime.jsx)(TextInput,{style:styles.textInputHeight,autoCorrect:true,autoFocus:true,keyboardType:"numeric",multiline:true,secureTextEntry:true,defaultValue:"This is text",testID:"textInput1"}),(0,_jsxRuntime.jsx)(TextInput,{style:styles.textInput,autoCapitalize:"sentences",autoCorrect:false,autoFocus:false,keyboardType:"default",multiline:false,secureTextEntry:false,placeholder:"1234",testID:"textInput2"}),(0,_jsxRuntime.jsx)(TextInput,{style:styles.textInput,defaultValue:"Hello, World",testID:"textInput3"}),(0,_jsxRuntime.jsx)(TextInput,{style:[styles.textInput,styles.textInputColor],testID:"textInput4"}),(0,_jsxRuntime.jsx)(TextInput,{style:[styles.textInput,styles.textInputColor],defaultValue:"",testID:"textInput5"}),(0,_jsxRuntime.jsx)(TextInput,{style:[styles.textInput,styles.textInputColor],defaultValue:"Text",testID:"textInput6"}),(0,_jsxRuntime.jsx)(TextInput,{onSubmitEditing:this.handleOnSubmitEditing.bind(this,'onSubmit'),defaultValue:"",testID:"onSubmitTextInput"}),(0,_jsxRuntime.jsx)(TokenizedTextExample,{})]});}}]);return TextInputTestApp;}(React.Component);var styles=StyleSheet.create({container:{padding:5,margin:10},textInputHeight:{fontSize:21,height:30},textInput:{fontSize:21,padding:0},hashtag:{color:'blue',fontWeight:'bold'},textInputColor:{color:'#00ff00'}});var TextInputTestModule={TextInputTestApp:TextInputTestApp,setValueRef:function setValueRef(ref,value){app.refs[ref].setNativeProps({text:value});}};BatchedBridge.registerCallableModule('TextInputTestModule',TextInputTestModule);module.exports=TextInputTestModule;