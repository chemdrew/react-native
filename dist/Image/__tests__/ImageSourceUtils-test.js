var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _require=require('../ImageSourceUtils'),getImageSourcesFromImageProps=_require.getImageSourcesFromImageProps;describe('ImageSourceUtils',function(){afterEach(function(){jest.clearAllMocks();});it('source prop provided',function(){var imageProps={source:require('./img/img1.png')};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();});it('should ignore source when src is provided',function(){var uri='imageURI';var imageProps={source:require('./img/img1.png'),src:uri};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(1);expect(sources[0].uri).toBe(uri);});it('should ignore source and src when srcSet is provided',function(){var uri='imageURI';var uri1='uri1';var scale1='1x';var uri2='uri2';var scale2='2x';var imageProps={source:require('./img/img1.png'),src:uri,srcSet:uri1+" "+scale1+", "+uri2+" "+scale2};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(2);expect(sources[0]).toEqual(expect.objectContaining({uri:uri1,scale:1}));expect(sources[1]).toEqual(expect.objectContaining({uri:uri2,scale:2}));});it('should use src as default when 1x scale is not provided in srcSet',function(){var uri='imageURI';var uri1='uri1';var scale1='3x';var uri2='uri2';var scale2='2x';var imageProps={src:uri,srcSet:uri1+" "+scale1+", "+uri2+" "+scale2};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(3);expect(sources[0]).toEqual(expect.objectContaining({uri:uri1,scale:3}));expect(sources[1]).toEqual(expect.objectContaining({uri:uri2,scale:2}));expect(sources[2]).toEqual(expect.objectContaining({uri:uri,scale:1}));});it('should use 1x as default scale if only url is provided in srcSet',function(){var uri1='uri1';var scale1='2x';var uri2='uri2';var imageProps={srcSet:uri1+" "+scale1+", "+uri2};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(2);expect(sources[0]).toEqual(expect.objectContaining({uri:uri1,scale:2}));expect(sources[1]).toEqual(expect.objectContaining({uri:uri2,scale:1}));});it('should warn when an unsupported scale is provided in srcSet',function(){var mockWarn=jest.spyOn(console,'warn').mockImplementation(function(){});var uri1='uri1';var scale1='300w';var uri2='uri2';var imageProps={srcSet:uri1+" "+scale1+", "+uri2};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(1);expect(mockWarn).toHaveBeenCalled();});it('should contain crossorigin headers when provided with src',function(){var uri='imageURI';var imageProps={src:uri,crossOrigin:'use-credentials'};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(1);expect(sources[0]).toHaveProperty('headers',(0,_defineProperty2.default)({},'Access-Control-Allow-Credentials','true'));});it('should contain referrerPolicy headers when provided with src',function(){var uri='imageURI';var referrerPolicy='origin-when-cross-origin';var imageProps={src:uri,referrerPolicy:referrerPolicy};var sources=getImageSourcesFromImageProps(imageProps);expect(sources).toBeDefined();expect(sources).toHaveLength(1);expect(sources[0]).toHaveProperty('headers',(0,_defineProperty2.default)({},'Referrer-Policy',referrerPolicy));});});